<Activity mc:Ignorable="sap sap2010" x:Class="Data_Extraction_from_the_form" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_form" Type="InArgument(x:String)" />
    <x:Property Name="out_FormDataTable" Type="OutArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>738.4,424</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Data_Extraction_from_the_form_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="33">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Data_Extraction_from_the_form" sap:VirtualizedContainerService.HintSize="304,354.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="files" />
      <Variable x:TypeArguments="sd:DataTable" Name="FormDataTable" />
      <Variable x:TypeArguments="x:String" Name="Surname" />
      <Variable x:TypeArguments="x:String" Name="Firstname" />
      <Variable x:TypeArguments="x:String" Name="DateOfBirth" />
      <Variable x:TypeArguments="x:String" Name="PlaceOfBirth" />
      <Variable x:TypeArguments="x:String" Name="CountryOfBirth" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:BuildDataTable DataTable="[FormDataTable]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;FieldName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Value&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
    <Sequence DisplayName="DataExtraction" sap:VirtualizedContainerService.HintSize="475.2,928.8" sap2010:WorkflowViewState.IdRef="Sequence_19">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="CurrentNationality" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" FileName="[in_form]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="StartProcess_5" />
      <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Private: Extract Fields" sap:VirtualizedContainerService.HintSize="433.6,643.2" sap2010:WorkflowViewState.IdRef="WindowScope_5" InformativeScreenshot="0436889f92c4f10b0d220dbfa7eaf3d2" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC (32-bit)' /&gt;">
        <ui:WindowScope.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="241.6,456" sap2010:WorkflowViewState.IdRef="Sequence_21">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="ExtractFirstPageData" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_17">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="NationalIdentityNumber" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'client'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="SendHotkey_9" Key="num0" KeyModifiers="Ctrl" SpecialKey="True">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8872f4d2-2786-4921-a22f-f513ee6c113f" InformativeScreenshot="58550cf991dbb99a3b312fcaa1db7601" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC (32-bit)' /&gt;&lt;wnd aaname='Panneau de visualisation' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl role='client' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <Sequence DisplayName="First Page Data Extraction" sap:VirtualizedContainerService.HintSize="241.6,625.6" sap2010:WorkflowViewState.IdRef="Sequence_24">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:AnchorBase AnchorPosition="Top" DisplayName="Surname" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="AnchorBase_20">
                    <ui:AnchorBase.Action>
                      <ActivityAction x:TypeArguments="ui:Anchor">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                        </ActivityAction.Argument>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  Karmani'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="GetOCRText_20">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_21" Image="[Image]" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="32c1529c-c2c6-48d3-978d-8a226c146526" InformativeScreenshot="253396e218393faafd95c8f9ebb3fb89" Selector="&lt;ctrl role='text' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[Surname]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                      </ActivityAction>
                    </ui:AnchorBase.Action>
                    <ui:AnchorBase.AnchorProvider>
                      <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'text 1.'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_20">
                        <ui:WaitUiElementAppear.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e2066b26-a280-4732-a12a-a32d63ee1b02" InformativeScreenshot="769b26e7a8efa9083cacb7bae1197632" Selector="&lt;wnd aaname='Panneau de visualisation' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl role='row' /&gt;&lt;ctrl name='1. Surname (Family name):   ' role='text' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:WaitUiElementAppear.Target>
                      </ui:WaitUiElementAppear>
                    </ui:AnchorBase.AnchorProvider>
                  </ui:AnchorBase>
                  <ui:AnchorBase AnchorPosition="Top" DisplayName="FirstName" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="AnchorBase_21">
                    <ui:AnchorBase.Action>
                      <ActivityAction x:TypeArguments="ui:Anchor">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                        </ActivityAction.Argument>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  Salma'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="GetOCRText_21">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_22" Image="[Image]" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e233431b-c458-4ced-a995-a47dfb5efe35" InformativeScreenshot="7a535185512eecf619976e18a75d281f" Selector="&lt;ctrl role='text' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[Firstname]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                      </ActivityAction>
                    </ui:AnchorBase.Action>
                    <ui:AnchorBase.AnchorProvider>
                      <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'text 2.'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_21">
                        <ui:WaitUiElementAppear.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="aa0b906c-af85-4c32-a2a3-84bab2704499" InformativeScreenshot="3df13d2ed2253d7142a1b1ea4c230862" Selector="&lt;wnd aaname='Panneau de visualisation' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='3' role='row' /&gt;&lt;ctrl name='2. First name(s) (Given name(s)):   ' role='text' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:WaitUiElementAppear.Target>
                      </ui:WaitUiElementAppear>
                    </ui:AnchorBase.AnchorProvider>
                  </ui:AnchorBase>
                  <ui:AnchorBase AnchorPosition="Top" DisplayName="DateOfBirth" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="AnchorBase_22">
                    <ui:AnchorBase.Action>
                      <ActivityAction x:TypeArguments="ui:Anchor">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                        </ActivityAction.Argument>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'client'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="GetOCRText_22">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_23" Image="[Image]" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="2e20c9a1-81f5-4698-b20f-5999b68df76d" InformativeScreenshot="1026f7f6ee645a33d3f90690e4558560" Selector="&lt;ctrl role='text' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[DateOfBirth]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                      </ActivityAction>
                    </ui:AnchorBase.Action>
                    <ui:AnchorBase.AnchorProvider>
                      <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'text  08-08-1998'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_22">
                        <ui:WaitUiElementAppear.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="c9f7efed-10be-4b85-b215-0403084d2cb6" InformativeScreenshot="3cc7477fc8337a89f4a1311ba8d80d72" Selector="&lt;wnd aaname='Panneau de visualisation' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='4' role='row' /&gt;&lt;ctrl name='Date of birth (day-month-year):   ' role='text' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:WaitUiElementAppear.Target>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:WaitUiElementAppear>
                    </ui:AnchorBase.AnchorProvider>
                  </ui:AnchorBase>
                  <ui:AnchorBase AnchorPosition="Top" DisplayName="PlaceOfBirth" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="AnchorBase_23">
                    <ui:AnchorBase.Action>
                      <ActivityAction x:TypeArguments="ui:Anchor">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                        </ActivityAction.Argument>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  Sousse'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="GetOCRText_23">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_24" Image="[Image]" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="87528caf-966b-4d1b-81f4-09fdd2811f10" InformativeScreenshot="a0207aea15acb06070ddfee33b041eaa" Selector="&lt;ctrl role='text' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[PlaceOfBirth]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                      </ActivityAction>
                    </ui:AnchorBase.Action>
                    <ui:AnchorBase.AnchorProvider>
                      <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'text  5. Place of birth:'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_23">
                        <ui:WaitUiElementAppear.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9067dccd-16ac-4fbd-8a3b-57ac5e94ed1f" InformativeScreenshot="52da4ced92e3186b4abfa8e1de7dc1a2" Selector="&lt;wnd aaname='Panneau de visualisation' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='4' role='row' /&gt;&lt;ctrl name='5. Place of birth:   ' role='text' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:WaitUiElementAppear.Target>
                      </ui:WaitUiElementAppear>
                    </ui:AnchorBase.AnchorProvider>
                  </ui:AnchorBase>
                  <ui:AnchorBase AnchorPosition="Top" DisplayName="NationalIdentityNumber" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="AnchorBase_24">
                    <ui:AnchorBase.Action>
                      <ActivityAction x:TypeArguments="ui:Anchor">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                        </ActivityAction.Argument>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  Sousse'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="GetOCRText_24">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_25" Image="[Image]" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="87528caf-966b-4d1b-81f4-09fdd2811f10" InformativeScreenshot="2ff1bc538ce73cccb76e27fe5d75bf4b" Selector="&lt;ctrl role='text' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[NationalIdentityNumber]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                      </ActivityAction>
                    </ui:AnchorBase.Action>
                    <ui:AnchorBase.AnchorProvider>
                      <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'text  5. Place of birth:'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_24">
                        <ui:WaitUiElementAppear.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9067dccd-16ac-4fbd-8a3b-57ac5e94ed1f" InformativeScreenshot="8b4c1f3292873289e1f100d03c388427" Selector="&lt;wnd aaname='Panneau de visualisation' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='12' role='row' /&gt;&lt;ctrl name='11. National identity number, where applicable:   ' role='text' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:WaitUiElementAppear.Target>
                      </ui:WaitUiElementAppear>
                    </ui:AnchorBase.AnchorProvider>
                  </ui:AnchorBase>
                  <Sequence DisplayName="cross data extraction" sap:VirtualizedContainerService.HintSize="241.6,516.8" sap2010:WorkflowViewState.IdRef="Sequence_27">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="findimg" />
                      <Variable x:TypeArguments="x:String" Name="CivilStatus" />
                      <Variable x:TypeArguments="x:String" Name="TypeOfDocument" />
                      <Variable x:TypeArguments="x:String" Name="Sex" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:FindImageMatches DisplayName="Find Image Matches 'acrord32.exe form.pdf'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="FindImageMatches_1" Matches="[findimg]">
                      <ui:FindImageMatches.Image>
                        <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" InitialScalingFactor="1.25" Profile="Basic" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAAAoAAAALCAYAAABGbhwYAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAABzSURBVChTlc7BDcAgCAVQlnAUR3EDNvHuhTncwi08uoNXGtKiEk3a/oQDPy8B4I/5BwHgfRQiIvfeZd1CRBPKcsLSe+8n1HLFilprFkoUp5QGkmxQEkJg5xzXWp/mAPVcjNG8YWDO2Zxbfx6wlGKQ5sbIF6A/Uc/Mf9QbAAAAAElFTkSuQmCC" />
                      </ui:FindImageMatches.Image>
                      <ui:FindImageMatches.Target>
                        <ui:Target Element="{x:Null}" Selector="{x:Null}" Id="486b27b1-2d36-4742-a381-34f3c64fd011">
                          <ui:Target.ClippingRegion>
                            <ui:Region Rectangle="3, 381, 68, 16" />
                          </ui:Target.ClippingRegion>
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:FindImageMatches.Target>
                    </ui:FindImageMatches>
                    <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'acrord32.exe form.pdf'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="WindowScope_8" InformativeScreenshot="52c5f49e734b02c3dc3fc196fc1cc434" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC (32-bit)' /&gt;">
                      <ui:WindowScope.Body>
                        <ActivityAction x:TypeArguments="x:Object">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="241.6,331.2" sap2010:WorkflowViewState.IdRef="Sequence_31">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  image.png'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_34">
                              <ui:GetOCRText.OCREngine>
                                <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                                  <ActivityFunc.Argument>
                                    <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                                  </ActivityFunc.Argument>
                                  <ui:MicrosoftOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_4" Image="[Image]" Language="[Nothing]" Profile="Screen" Scale="1" />
                                </ActivityFunc>
                              </ui:GetOCRText.OCREngine>
                              <ui:GetOCRText.Target>
                                <ui:Target Element="{x:Null}" Id="b17e3caf-5b8d-4588-8452-664c91245a47" InformativeScreenshot="36559c6debe8555e639305779588029b" Selector="&lt;wnd aaname='Panneau de visualisation' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='7' role='row' /&gt;">
                                  <ui:Target.ClippingRegion>
                                    <ui:Region Rectangle="36, 0, 39, 19" />
                                  </ui:Target.ClippingRegion>
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:GetOCRText.Target>
                              <ui:GetOCRText.Text>
                                <OutArgument x:TypeArguments="x:String">[CivilStatus]</OutArgument>
                              </ui:GetOCRText.Text>
                            </ui:GetOCRText>
                            <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  image.png'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="GetOCRText_35">
                              <ui:GetOCRText.OCREngine>
                                <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                                  <ActivityFunc.Argument>
                                    <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                                  </ActivityFunc.Argument>
                                  <ui:MicrosoftOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_5" Image="[Image]" Language="[Nothing]" Profile="Screen" Scale="1" />
                                </ActivityFunc>
                              </ui:GetOCRText.OCREngine>
                              <ui:GetOCRText.Target>
                                <ui:Target Element="{x:Null}" Id="b17e3caf-5b8d-4588-8452-664c91245a47" InformativeScreenshot="f27be6101db780fe7e6d3e9513804d4a" Selector="&lt;wnd aaname='Panneau de visualisation' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl role='table' /&gt;">
                                  <ui:Target.ClippingRegion>
                                    <ui:Region Rectangle="2, 375, 71, 15" />
                                  </ui:Target.ClippingRegion>
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:GetOCRText.Target>
                              <ui:GetOCRText.Text>
                                <OutArgument x:TypeArguments="x:String">[TypeOfDocument]</OutArgument>
                              </ui:GetOCRText.Text>
                            </ui:GetOCRText>
                            <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  image.png'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="GetOCRText_36">
                              <ui:GetOCRText.OCREngine>
                                <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                                  <ActivityFunc.Argument>
                                    <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                                  </ActivityFunc.Argument>
                                  <ui:MicrosoftOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_6" Image="[Image]" Language="[Nothing]" Profile="Screen" Scale="1" />
                                </ActivityFunc>
                              </ui:GetOCRText.OCREngine>
                              <ui:GetOCRText.Target>
                                <ui:Target Element="{x:Null}" Id="b17e3caf-5b8d-4588-8452-664c91245a47" InformativeScreenshot="60a9440031afcdd264ba28b66520097d" Selector="&lt;wnd aaname='Panneau de visualisation' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='7' role='row' /&gt;">
                                  <ui:Target.ClippingRegion>
                                    <ui:Region Rectangle="35, 1, 38, 16" />
                                  </ui:Target.ClippingRegion>
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:GetOCRText.Target>
                              <ui:GetOCRText.Text>
                                <OutArgument x:TypeArguments="x:String">[Sex]</OutArgument>
                              </ui:GetOCRText.Text>
                            </ui:GetOCRText>
                          </Sequence>
                        </ActivityAction>
                      </ui:WindowScope.Body>
                    </ui:WindowScope>
                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[CivilStatus]" />
                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[TypeOfDocument]" />
                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[Sex]" />
                  </Sequence>
                </Sequence>
                <Sequence DisplayName="Add rows" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_23">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;SurName&quot;,Surname}]" DataTable="[FormDataTable]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AddDataRow_17" />
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;FirstName&quot;,Firstname}]" DataTable="[FormDataTable]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AddDataRow_18" />
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;BirthDate&quot;,DateOfBirth}]" DataTable="[FormDataTable]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AddDataRow_19" />
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;PlaceOfBirth&quot;,PlaceOfBirth}]" DataTable="[FormDataTable]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AddDataRow_20" />
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;NationalIdentityNumber&quot;,NationalIdentityNumber}]" DataTable="[FormDataTable]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AddDataRow_21" />
                </Sequence>
              </Sequence>
              <Sequence DisplayName="ExtractSecondPageData" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_20">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="TelephoneNumber" />
                  <Variable x:TypeArguments="x:String" Name="CurrentOccupation" />
                  <Variable x:TypeArguments="x:String" Name="DateOfIssue" />
                  <Variable x:TypeArguments="x:String" Name="NumberOfTravelDocument" />
                  <Variable x:TypeArguments="x:String" Name="ValidInto" />
                  <Variable x:TypeArguments="x:String" Name="IssuedBy" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="SendHotkey_12" Key="pgdn" KeyModifiers="None" SpecialKey="True">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="7f36de82-367c-479b-99d9-61d9562f76ee">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="SendHotkey_13" Key="num0" KeyModifiers="Ctrl" SpecialKey="True">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="09e8b3d3-08ab-4ed9-9270-25e84433c511">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <Sequence DisplayName="SeconsPageDataExtraction" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_25">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:AnchorBase AnchorPosition="Auto" DisplayName="TelephoneNumber" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="AnchorBase_25">
                    <ui:AnchorBase.Action>
                      <ActivityAction x:TypeArguments="ui:Anchor">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                        </ActivityAction.Argument>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'client'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="GetOCRText_25">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_26" Image="[Image]" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="2e20c9a1-81f5-4698-b20f-5999b68df76d" InformativeScreenshot="8f21cae0f2b32f37e641b0c5605f430a" Selector="&lt;ctrl role='text' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[TelephoneNumber]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                      </ActivityAction>
                    </ui:AnchorBase.Action>
                    <ui:AnchorBase.AnchorProvider>
                      <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'text  Telephone no.:'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_25">
                        <ui:WaitUiElementAppear.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="2f0f66e5-5fd2-49a6-b778-f64c4a2de56b" InformativeScreenshot="90d1062c23976406b18194d280ae800b" Selector="&lt;wnd aaname='Panneau de visualisation' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='22' role='row' /&gt;&lt;ctrl name='Telephone no.:   ' role='text' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:WaitUiElementAppear.Target>
                      </ui:WaitUiElementAppear>
                    </ui:AnchorBase.AnchorProvider>
                  </ui:AnchorBase>
                  <ui:AnchorBase AnchorPosition="Auto" DisplayName="CurrentOccupation" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="AnchorBase_26">
                    <ui:AnchorBase.Action>
                      <ActivityAction x:TypeArguments="ui:Anchor">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                        </ActivityAction.Argument>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  Student'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_26">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_27" Image="[Image]" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7f5196d1-c836-4f10-b7e6-a07a16cdb975" InformativeScreenshot="1be524c89901077c3e0b225c5ad33600" Selector="&lt;ctrl role='text' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[CurrentOccupation]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                      </ActivityAction>
                    </ui:AnchorBase.Action>
                    <ui:AnchorBase.AnchorProvider>
                      <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'text *21.'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_26">
                        <ui:WaitUiElementAppear.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1a39be8b-5ec7-49fe-87f6-88c012f61a09" InformativeScreenshot="e5236850c660a801a380f33cb5c70018" Selector="&lt;wnd aaname='Panneau de visualisation' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='24' role='row' /&gt;&lt;ctrl name='*21. Current occupation:   ' role='text' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:WaitUiElementAppear.Target>
                      </ui:WaitUiElementAppear>
                    </ui:AnchorBase.AnchorProvider>
                  </ui:AnchorBase>
                  <ui:AnchorBase AnchorPosition="Auto" DisplayName="NumberOfTravelDocument" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="AnchorBase_27">
                    <ui:AnchorBase.Action>
                      <ActivityAction x:TypeArguments="ui:Anchor">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                        </ActivityAction.Argument>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  EC1234567'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="GetOCRText_27">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_28" Image="[Image]" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="c78754f4-475d-4396-b629-7d71a6cb3494" InformativeScreenshot="7c789df375d202fac54724da1394d6ef" Selector="&lt;ctrl role='text' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[NumberOfTravelDocument]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                      </ActivityAction>
                    </ui:AnchorBase.Action>
                    <ui:AnchorBase.AnchorProvider>
                      <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'text .'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_27">
                        <ui:WaitUiElementAppear.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ba697dfb-27a0-4066-8dd0-722d86ef812e" InformativeScreenshot="0ab441e360162959df6b04ec1f30a308" Selector="&lt;wnd aaname='Panneau de visualisation' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='17' role='row' /&gt;&lt;ctrl name='13. Number of   travel document:   ' role='text' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:WaitUiElementAppear.Target>
                      </ui:WaitUiElementAppear>
                    </ui:AnchorBase.AnchorProvider>
                  </ui:AnchorBase>
                  <ui:AnchorBase AnchorPosition="Auto" DisplayName="DateOfIssue" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="AnchorBase_28">
                    <ui:AnchorBase.Action>
                      <ActivityAction x:TypeArguments="ui:Anchor">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                        </ActivityAction.Argument>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  17-12-2020'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="GetOCRText_28">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_29" Image="[Image]" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e00abcd2-00ab-4fb0-a855-021b3844062e" InformativeScreenshot="81d6b7fcbf95b6abd3a937e4b0c76400" Selector="&lt;ctrl role='text' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[DateOfIssue]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                      </ActivityAction>
                    </ui:AnchorBase.Action>
                    <ui:AnchorBase.AnchorProvider>
                      <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'text  14. Date of issue:'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_28">
                        <ui:WaitUiElementAppear.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d7c60916-3557-4f21-aac2-38f61814e73f" InformativeScreenshot="c26c4f5b5f7c012cd50142e89d870a7c" Selector="&lt;wnd aaname='Panneau de visualisation' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='17' role='row' /&gt;&lt;ctrl name='14. Date of   issue:   ' role='text' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:WaitUiElementAppear.Target>
                      </ui:WaitUiElementAppear>
                    </ui:AnchorBase.AnchorProvider>
                  </ui:AnchorBase>
                  <ui:AnchorBase AnchorPosition="Auto" DisplayName="ValidInto" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="AnchorBase_29">
                    <ui:AnchorBase.Action>
                      <ActivityAction x:TypeArguments="ui:Anchor">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                        </ActivityAction.Argument>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  16-12-2024'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="GetOCRText_29">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_30" Image="[Image]" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="22570695-42b8-46bf-86ac-6bcd65112da5" InformativeScreenshot="cb1e7faf17f5271abfb705ce5aa97497" Selector="&lt;ctrl role='text' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[ValidInto]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                      </ActivityAction>
                    </ui:AnchorBase.Action>
                    <ui:AnchorBase.AnchorProvider>
                      <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'text  15. Valid until:'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_29">
                        <ui:WaitUiElementAppear.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="40e95f78-9cf7-430b-b6d1-398bc0f73219" InformativeScreenshot="a711141cbb62d7105c2e940364124d97" Selector="&lt;wnd aaname='Panneau de visualisation' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='17' role='row' /&gt;&lt;ctrl name='15. Valid until:   ' role='text' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:WaitUiElementAppear.Target>
                      </ui:WaitUiElementAppear>
                    </ui:AnchorBase.AnchorProvider>
                  </ui:AnchorBase>
                  <ui:AnchorBase AnchorPosition="Auto" DisplayName="IssuedBy" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="AnchorBase_30">
                    <ui:AnchorBase.Action>
                      <ActivityAction x:TypeArguments="ui:Anchor">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                        </ActivityAction.Argument>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  Tunisia'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="GetOCRText_30">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_31" Image="[Image]" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5aab2d73-e0b3-44a3-9980-9638065bb9d3" InformativeScreenshot="89609d2fa15b398828e8c1c047b2169e" Selector="&lt;ctrl role='text' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[IssuedBy]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                      </ActivityAction>
                    </ui:AnchorBase.Action>
                    <ui:AnchorBase.AnchorProvider>
                      <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'text 16.'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_30">
                        <ui:WaitUiElementAppear.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3cea3472-7c3a-45eb-8d53-178d30c4ffd2" InformativeScreenshot="7a9ee18e74dca5ae58475887d77398b3" Selector="&lt;wnd aaname='Panneau de visualisation' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='17' role='row' /&gt;&lt;ctrl name='16. Issued by   (country):   ' role='text' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:WaitUiElementAppear.Target>
                      </ui:WaitUiElementAppear>
                    </ui:AnchorBase.AnchorProvider>
                  </ui:AnchorBase>
                </Sequence>
                <Sequence DisplayName="Add rows" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_26">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;TelephoneNumber&quot;,TelephoneNumber}]" DataTable="[FormDataTable]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AddDataRow_22" />
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;CurrentOccupation&quot;,CurrentOccupation}]" DataTable="[FormDataTable]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AddDataRow_23" />
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;PassportNumber&quot;,NumberOfTravelDocument}]" DataTable="[FormDataTable]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AddDataRow_24" />
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;DateOfIssue&quot;,DateOfIssue}]" DataTable="[FormDataTable]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AddDataRow_25" />
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;ValidInto&quot;,ValidInto}]" DataTable="[FormDataTable]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AddDataRow_26" />
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;IssuedBy&quot;,IssuedBy}]" DataTable="[FormDataTable]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AddDataRow_27" />
                </Sequence>
              </Sequence>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_7" InstanceCachePeriod="3000" WorkbookPath="FormData.xlsx">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_22">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[FormDataTable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Feuil1">
                        <ui:ExcelWriteRange.StartingCell>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ExcelWriteRange.StartingCell>
                      </ui:ExcelWriteRange>
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
              </ui:ExcelApplicationScope>
              <ui:CloseApplication DisplayName="Close Application 'client'" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="CloseApplication_6">
                <ui:CloseApplication.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5262a0c7-99c0-470e-9979-866d244cba51" InformativeScreenshot="9bfbe35f4ed0e096f65809d136fb690c" Selector="&lt;wnd aaname='Panneau de visualisation' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl role='client' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:CloseApplication.Target>
              </ui:CloseApplication>
            </Sequence>
          </ActivityAction>
        </ui:WindowScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:WindowScope>
      <Assign sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="Assign_3">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataTable">[out_FormDataTable]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataTable">[FormDataTable]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataTable">[out_FormDataTable]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataTable">[FormDataTable]</InArgument>
      </Assign.Value>
    </Assign>
  </Sequence>
</Activity>